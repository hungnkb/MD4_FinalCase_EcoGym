<!DOCTYPE html>
<html lang="en">

<head>
    <%- include("layouts/header.ejs") %>
        <title>EcoGYM</title>
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg bg-light">
            <div class="container-fluid">
                <h2 class="mr-5">EcoGym</h2>
                <div class="collapse navbar-collapse ms-5" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="" onclick="categoryPickDefault(event)"
                                data-bs-toggle="modal" data-bs-target="#transactions">Transactions</a>
                        </li>
                        <li class="nav-item">
                            <ul class="navbar-nav me-auto mb-2 mb-lg-0 mr-4">
                                <li class="nav-item dropdown">
                                    <select class="form-control custom-select" style="border: none" id="walletInHome"
                                        onfocus="totalMoneyByWallet(event)" onchange="totalMoneyByWallet(event)">
                                        <option class="walletName" value="all-wallet" selected="selected">All wallet
                                        </option>
                                        <% wallets.forEach( (wallet)=> { %>
                                            <option class="walletName" value="<%= wallet.walletName%>">
                                                <%= wallet.walletName%>
                                            </option>
                                            <% }) %>
                                    </select>
                                </li>

                            </ul>
                        </li>
                        <li class="nav-item">
                            <p class="mt-2" id="totalMoney" style="color: green">
                                <%=totalMoney%>
                            </p>
                        </li>
                    </ul>
                </div>

                <ul class="navbar-nav me-auto mb-2 mb-lg-0 mr-4">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button"
                            data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <%= userInfo[0].email %>
                        </a>
                        <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <a class="dropdown-item" href="#">Profile</a>
                            <a class="dropdown-item" href="#">Wallet Manager</a>
                            <div class="dropdown-divider"></div>
                            <a class="dropdown-item" href="/api/category/">Category Manager</a>
                        </div>
                    </li>
                </ul>
                <button type="button" onclick="logout()" class="btn btn-secondary">Logout</button>
            </div>
        </nav>
    </header>

    <main class="body-page container d-flex justify-content-center flex-column">
        <button onclick="categoryPickDefault(event)" type="button" style="width: 100%;" class="btn btn-primary"
            data-toggle="modal" data-target="#exampleModalCenter">
            Add new Transaction
        </button>
        <!-- Modal add new transaction -->
        <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="exampleModalLabel">Transaction</h1>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form action="/api/transaction" method="post" id="form-transaction">
                        <div class="modal-body">
                            <label class="form-label">Wallet</label>
                            <select class="custom-select mb-3" id="wallet">
                                <% wallets.forEach(w=> { %>
                                    <option value="<%=w.walletName%>">
                                        <%=w.walletName%>
                                    </option>
                                    <% }) %>
                                        <option value=""></option>
                            </select>
                            <label class="form-label">Category</label>
                            <select id="category" class="custom-select mb-3" onfocus="categoryPick(event)"
                                onchange="categoryPick(event)" id="category">
                                <option value="incomeCategory">Income</option>
                                <option value="outcomeCategory">Outcome</option>
                            </select>
                            <label class="form-label">Detail</label>
                            <div id="categoryNameList">

                            </div>

                            <div class="mb-3">
                                <label class="form-label">Amount</label>
                                <input required name="amount" type="number" class="form-control" id="amount">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Date</label>
                                <input required name="date" type="date" class="form-control" id="date">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Description</label>
                                <input required type="text" class="form-control" id="desc">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            <button type="submit" onclick="submitTransaction(event)"
                                class="btn btn-primary">Add</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <section class="transactions mt-5 m-auto" style="width: 900px">
            <div>
                <ul class="nav nav-tabs d-flex justify-content-around mt-5">
                    <li class="nav-item">
                        <a class="nav-link link-trans" aria-current="page" href="#week">This week</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link link-trans active" href="#today">Today</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link link-trans" href="#month">This month</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link link-trans disabled">This year</a>
                    </li>
                </ul>
            </div>
            <div class="flow mt-2">
                <div class="inflow d-flex justify-content-between">
                    <p>Inflow</p>
                    <p class="money-in">40000</p>
                </div>
                <div class="outflow d-flex justify-content-between">
                    <p>Outflow</p>
                    <p class="money-out">40000</p>
                </div>
                <hr style="width: 50%; margin-left: 50%; margin-top: 0;">
                <div class="outflow d-flex justify-content-end">
                    <p class="money-out">40000</p>
                </div>
            </div>
            <div id="week" class="trans-content mt-3 d-none">1</div>

            <div id="today" class="trans-content mt-3">

            </div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                   <div id="page-list-number">

                   </div>
                        
                   
                </ul>
            </nav>
            <div id="month" class=" trans-content mt-3 d-none">3</div>
        </section>
    </main>

    <!-- script -->
    <%- include("layouts/b5script.ejs") %>
        <script>
            // active class transaction
            let transContents = document.querySelectorAll(".trans-content");
            let btnLinks = document.querySelectorAll(".link-trans");
            function addDnoneClass(listContent) {
                listContent.forEach(content => {
                    content.classList.add("d-none")
                })
            }
            function removeActiveClass(listBtn) {
                listBtn.forEach(btn => {
                    btn.classList.remove("active");
                })
            }
            function activeTrans() {
                for (let i = 0; i < btnLinks.length; i++) {
                    btnLinks[i].addEventListener('click', () => {
                        addDnoneClass(transContents)
                        removeActiveClass(btnLinks)
                        btnLinks[i].classList.add("active");
                        transContents[i].classList.remove("d-none")
                    })
                }
            }
            activeTrans()
            // logout

            let logout = () => {
                console.log("123");
                axios({
                    method: 'get',
                    url: 'http://localhost:3000/api/logout',
                }).then(result => {
                    window.location.replace(
                        `http://${window.location.hostname}:${window.location.port}/auth/login`
                    )
                })
            }
        </script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            // set default nameCategory input in Add transaction modal
            let categoryPickDefault = (event) => {
                let category = event.target.value;
                document.querySelector('#categoryNameList').innerHTML = `
                        <select id="categoryName" class="custom-select mb-3">
                                    <% defaultCategory.forEach(ic => { %>
                                        <% if (ic.status ==="income") {%>
                                        <option value="<%= ic.categoryName %>"><%= ic.categoryName %></option>
                                        <% } %>
                                    <% }) %>
                                    <% category.forEach(ic => { %>
                                        <% defaultCategory.forEach(id => { %>
                                            <% if (ic.categoryName !== id.categoryName){ %>
                                            <option value="<%= ic.categoryName %>"><%= ic.categoryName %></option>
                                            <% } %>
                                        <% }) %>
                                    <% }) %>
                                </select>
                        `
            }

            // check category income/outcome then render nameCategory input in Add transaction modal
            let categoryPick = event => {
                let category = event.target.value;
                if (category == 'incomeCategory') {
                    document.querySelector('#categoryNameList').innerHTML = `
                <select id="categoryName" class="custom-select mb-3">
                                    <% defaultCategory.forEach(ic => { %>
                                        <% if (ic.status ==="income") {%>
                                        <option value="<%= ic.categoryName %>"><%= ic.categoryName %></option>
                                        <% } %>
                                    <% }) %>
                                    <% category.forEach(ic => { %>
                                        <% defaultCategory.forEach(id => { %>
                                            <% if (ic.categoryName !== id.categoryName){ %>
                                            <option value="<%= ic.categoryName %>"><%= ic.categoryName %></option>
                                            <% } %>
                                        <% }) %>
                                    <% }) %>
                                </select>
                        `
                } else {
                    document.querySelector('#categoryNameList').innerHTML = `
                <select id="categoryName" class="custom-select mb-3">
                                    <% defaultCategory.forEach(ic => { %>
                                        <% if (ic.status ==="outcome") {%>
                                        <option value="<%= ic.categoryName %>"><%= ic.categoryName %></option>
                                        <% } %>
                                    <% }) %>
                                    <% category.forEach(ic => { %>
                                        <% defaultCategory.forEach(id => { %>
                                            <% if (ic.categoryName !== id.categoryName){ %>
                                            <option value="<%= ic.categoryName %>"><%= ic.categoryName %></option>
                                            <% } %>
                                        <% }) %>
                                    <% }) %>
                                </select>
                        `
                }
            }

            // send data-form
            let submitTransaction = (event) => {
                let form = document.querySelector('#form-transaction');
                let nameWallet = document.querySelector('#wallet');
                let moneyTrade = document.querySelector('#amount');
                let nameCategory = document.querySelector('#categoryName');
                let timeTrade = document.querySelector('#date');
                let status = document.querySelector('#category');
                let desc = document.querySelector('#desc');
                event.preventDefault();

                // check if required inputs are filled then send data through API. 
                // URL and Method are given from form-transaction attribute
                if (moneyTrade.value && timeTrade.value && nameCategory.value && status.value) {

                    axios({
                        method: form.method,
                        url: form.action,
                        data: {
                            nameWallet: nameWallet.value,
                            moneyTrade: moneyTrade.value,
                            nameCategory: nameCategory.value,
                            timeTrade: timeTrade.value,
                            status: status.value,
                            desc: desc.value
                        }
                    }).then(result => {
                        Swal.fire({
                            position: 'center',
                            icon: 'success',
                            title: 'Add transaction success',
                            showConfirmButton: false,
                            timer: 1500
                        }).then(result => {
                            window.location.replace(
                                `http://${window.location.hostname}:${window.location.port}/`
                            )
                        }).catch(error => {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Please fill all field before save changes',
                                // footer: '<a href="">Why do I have this issue?</a>'
                            })
                        })
                    })

                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please fill all field before save changes',
                        // footer: '<a href="">Why do I have this issue?</a>'
                    })
                }
            }

            const totalMoneyByWallet = (event) => {
                event.preventDefault();
                axios({
                    method: 'get',
                    url: 'http://localhost:3000/api/wallet',
                })
                    .then(function (result) {
                        let wallets = result.data.wallets;
                        let walletName = event.target;
                        let totalMoney = 0;
                        if (walletName == 'all-wallet') {
                            for (let i = 0; i < wallets.length; i++) {
                                totalMoney += wallets[i].totalMoneyLeft;
                            }
                            document.querySelector('#totalMoney').innerHTML = totalMoney;
                        } else {
                            for (let i = 0; i < wallets.length; i++) {
                                if (wallets[i].walletName == walletName) {
                                    document.querySelector('#totalMoney').innerHTML = wallets[i].totalMoneyLeft;
                                }
                            }
                        }
                    });
            }

            let defaultTransListToday = (offset) => {
                if (!offset) {
                    offset = 0;
                }
                console.log(offset);
                document.querySelector('#today').innerHTML = '';
                document.querySelector('#page-list-number').innerHTML = '';

                let today = new Date().toISOString().split('T')[0];
                axios({
                    method: 'get',
                    url: `http://localhost:3000/api/transaction/${offset}&${today}`,
                }).then(result => {
                    result.data.transactions.forEach(transaction => {
                        document.querySelector('#today').innerHTML += `
                        <div class="trans-item mb-2 p-3"
                    style="border-top: 2px solid grey; background-color: rgb(226, 226, 226);">
                    <div class="trans-category mt-2 d-flex justify-content-between">
                        <h3 class="trans-category-name">${transaction.nameCategory}</h3>
                        <div class="trans-btn">
                            <button type="button" class="btn btn-primary">Edit</button>
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </div>
                    </div>
                    <div class="trans-info">
                        <div class="trans-info-top d-flex justify-content-between mt-2">
                            <p class="trans-time">${transaction.timeTrade.split('T')[0]}</p>
                            <h5 class="money">${transaction.moneyTrade}</h5>
                        </div>
                        <div class="trans-info-bot d-flex justify-content-start mt-2">
                            <p class="trans-desc">${transaction.desc}</p>
                        </div>
                    </div>
                </div>
                        `
                    });

                    let total = Math.ceil(result.data.total / 5);
                    for (let i = 0; i < total; i++) {
                        document.querySelector('#page-list-number').innerHTML += `
                        <li class="page-item"><div onclick="defaultTransListToday(${i})">${i+1}</div></li>
                        `
                    }
                })
            }

            defaultTransListToday();

            transListToday = (offset) => {

            }

        </script>
</body>

</html>